// Application JavaScript pour l'Assistant Grossesse IA

class GrossesseAssistant {
    constructor() {
        console.log('üîß Initialisation du constructeur...');
        this.initializeElements();
        this.bindEvents();
        this.loading = false;
        console.log('‚úÖ Constructeur initialis√©');
    }
    
    initializeElements() {
        console.log('üîç Recherche des √©l√©ments...');
        
        this.chatInput = document.getElementById('chatInput');
        this.sendButton = document.getElementById('sendButton');
        this.chatMessages = document.getElementById('chatMessages');
        this.predictionForm = document.getElementById('predictionForm');
        this.predictionResult = document.getElementById('predictionResult');
        
        console.log('üìù √âl√©ments trouv√©s:', {
            chatInput: !!this.chatInput,
            sendButton: !!this.sendButton,
            chatMessages: !!this.chatMessages,
            predictionForm: !!this.predictionForm,
            predictionResult: !!this.predictionResult
        });
    }
    
    bindEvents() {
        console.log('üîó Liaison des √©v√©nements...');
        
        if (this.sendButton) {
            this.sendButton.addEventListener('click', () => {
                console.log('üì§ Bouton d\'envoi cliqu√©');
                this.sendMessage();
            });
            console.log('‚úÖ √âv√©nement click ajout√© au bouton d\'envoi');
        }
        
        if (this.chatInput) {
            this.chatInput.addEventListener('keypress', (e) => {
                if (e.key === 'Enter') {
                    console.log('‚å®Ô∏è Touche Entr√©e press√©e');
                    this.sendMessage();
                }
            });
            console.log('‚úÖ √âv√©nement keypress ajout√© au champ de saisie');
        }
        
        if (this.predictionForm) {
            this.predictionForm.addEventListener('submit', (e) => {
                console.log('üìã Formulaire soumis');
                this.handlePrediction(e);
            });
            console.log('‚úÖ √âv√©nement submit ajout√© au formulaire');
        }
        
        console.log('‚úÖ Tous les √©v√©nements ont √©t√© li√©s');
    }
    
    async sendMessage() {
        const message = this.chatInput.value.trim();
        if (!message || this.loading) return;
        
        // Ajouter le message utilisateur
        this.addMessage(message, 'user');
        this.chatInput.value = '';
        
        // Simuler la r√©ponse de l'IA
        this.loading = true;
        this.sendButton.innerHTML = '<span class="loading"></span>';
        
        try {
            const response = await this.getChatbotResponse(message);
            this.addMessage(response, 'bot');
        } catch (error) {
            this.addMessage("D√©sol√©, je rencontre des difficult√©s techniques. Veuillez r√©essayer.", 'bot');
        } finally {
            this.loading = false;
            this.sendButton.innerHTML = 'üì§';
        }
    }
    
    async getChatbotResponse(message) {
        // Simulation de r√©ponses intelligentes
        const responses = {
            'naus√©e': "Les naus√©es sont tr√®s courantes au premier trimestre. Essayez de manger de petites quantit√©s fr√©quemment, √©vitez les odeurs fortes, et privil√©giez les aliments secs comme les crackers. Si elles persistent, parlez-en √† votre m√©decin.",
            'fatigue': "La fatigue est normale pendant la grossesse, surtout au premier et troisi√®me trimestre. Reposez-vous quand vous le pouvez, faites des siestes courtes, et maintenez une activit√© physique mod√©r√©e.",
            'douleur': "Toute douleur inhabituelle doit √™tre √©valu√©e par un professionnel de sant√©. Ne prenez pas d'analg√©siques sans avis m√©dical.",
            'alimentation': "Une alimentation √©quilibr√©e est essentielle. Privil√©giez les fruits, l√©gumes, prot√©ines maigres, et c√©r√©ales compl√®tes. √âvitez les aliments crus, l'alcool, et limitez la caf√©ine.",
            'activit√©': "L'activit√© physique mod√©r√©e est b√©n√©fique : marche, natation, yoga pr√©natal. √âvitez les sports de contact et les activit√©s √† risque de chute.",
            'sommeil': "Le sommeil peut √™tre perturb√©. Essayez de dormir sur le c√¥t√© gauche, utilisez des oreillers de grossesse, et √©vitez les repas lourds le soir."
        };
        
        // Recherche de mots-cl√©s dans le message
        const lowerMessage = message.toLowerCase();
        for (const [keyword, response] of Object.entries(responses)) {
            if (lowerMessage.includes(keyword)) {
                return response;
            }
        }
        
        // R√©ponse par d√©faut
        return "Je comprends votre preoccupation. Pour des conseils personnalises, n'hesitez pas a me donner plus de details sur votre situation. N'oubliez pas que je ne remplace pas l'avis medical de votre professionnel de sante.";
    }
    
    addMessage(content, type) {
        const messageDiv = document.createElement('div');
        messageDiv.className = `message ${type}-message`;
        
        const messageContent = document.createElement('div');
        messageContent.className = 'message-content';
        messageContent.innerHTML = `<p>${content}</p>`;
        
        messageDiv.appendChild(messageContent);
        this.chatMessages.appendChild(messageDiv);
        
        // Scroll vers le bas
        this.chatMessages.scrollTop = this.chatMessages.scrollHeight;
    }
    
    async handlePrediction(e) {
        e.preventDefault();
        
        // Afficher un message de chargement
        this.showPredictionResult({
            niveau: 'warning',
            message: '‚è≥ √âvaluation en cours...'
        });
        
        const formData = new FormData(this.predictionForm);
        const data = {
            age: parseInt(formData.get('age')),
            mois_grossesse: parseInt(formData.get('mois_grossesse')),
            poids_kg: parseFloat(formData.get('poids_kg')),
            taille_cm: parseInt(formData.get('taille_cm')),
            activite: formData.get('activite'),
            regime: formData.get('regime'),
            antecedents: formData.get('antecedents'),
            symptome: formData.get('symptome')
        };
        
        // Debug: afficher les donn√©es re√ßues
        console.log('Donn√©es du formulaire:', data);
        
        try {
            const result = await this.predictRisk(data);
            this.showPredictionResult(result);
        } catch (error) {
            this.showPredictionResult({
                niveau: 'error',
                message: 'Erreur lors de l\'evaluation. Veuillez reessayer.'
            });
        }
    }
    
    async predictRisk(data) {
        // Simulation de pr√©diction bas√©e sur des r√®gles simples
        let riskScore = 0;
        
        // Facteurs de risque
        if (data.age > 35) riskScore += 2;
        if (data.age > 40) riskScore += 3;
        if (data.poids_kg > 100) riskScore += 1;
        if (data.antecedents === 'hypertension') riskScore += 3;
        if (data.antecedents === 'diab√®te') riskScore += 3;
        if (data.symptome === 'douleur') riskScore += 2;
        
        // Calcul du niveau de risque
        let niveau, message;
        if (riskScore <= 2) {
            niveau = 'success';
            message = 'Risque faible. Continuez a prendre soin de vous et suivez les recommandations de votre medecin.';
        } else if (riskScore <= 5) {
            niveau = 'warning';
            message = 'Risque modere. Surveillez vos symptomes et consultez regulierement votre professionnel de sante.';
        } else {
            niveau = 'error';
            message = 'Risque eleve. Consultation medicale recommandee dans les plus brefs delais.';
        }
        
        return { niveau, message, score: riskScore };
    }
    
    showPredictionResult(result) {
        this.predictionResult.className = `prediction-result ${result.niveau}`;
        this.predictionResult.innerHTML = `
            <h3>Resultat de l'evaluation</h3>
            <p>${result.message}</p>
            ${result.score ? `<p><strong>Score de risque : ${result.score}/10</strong></p>` : ''}
        `;
        this.predictionResult.classList.remove('hidden');
        
        // Scroll vers le r√©sultat
        this.predictionResult.scrollIntoView({ behavior: 'smooth' });
    }
}

// Initialisation de l'application
document.addEventListener('DOMContentLoaded', () => {
    console.log('üöÄ DOM charg√©, initialisation de l\'application...');
    
    try {
        new GrossesseAssistant();
        console.log('‚úÖ Application initialis√©e avec succ√®s');
    } catch (error) {
        console.error('‚ùå Erreur lors de l\'initialisation:', error);
    }
    
    // Animation d'entr√©e
    document.body.style.opacity = '0';
    document.body.style.transition = 'opacity 0.5s ease-in';
    
    setTimeout(() => {
        document.body.style.opacity = '1';
    }, 100);
});